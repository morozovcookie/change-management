// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"net/url"

	"github.com/go-faster/errors"
)

type CreateCRQApplicationJSONBadRequest Error

func (*CreateCRQApplicationJSONBadRequest) createCRQRes() {}

type CreateCRQApplicationJSONInternalServerError Error

func (*CreateCRQApplicationJSONInternalServerError) createCRQRes() {}

type CreateCRQReq struct {
	// The short-form description of change.
	Summary string `json:"summary"`
	// The long-form description of change.
	Description string `json:"description"`
	// The type of change.
	Type OptCreateCRQReqType `json:"type"`
	// This flag indicates that change request should be closed  automatically.
	IsAutoClose OptBool `json:"isAutoClose"`
}

// GetSummary returns the value of Summary.
func (s *CreateCRQReq) GetSummary() string {
	return s.Summary
}

// GetDescription returns the value of Description.
func (s *CreateCRQReq) GetDescription() string {
	return s.Description
}

// GetType returns the value of Type.
func (s *CreateCRQReq) GetType() OptCreateCRQReqType {
	return s.Type
}

// GetIsAutoClose returns the value of IsAutoClose.
func (s *CreateCRQReq) GetIsAutoClose() OptBool {
	return s.IsAutoClose
}

// SetSummary sets the value of Summary.
func (s *CreateCRQReq) SetSummary(val string) {
	s.Summary = val
}

// SetDescription sets the value of Description.
func (s *CreateCRQReq) SetDescription(val string) {
	s.Description = val
}

// SetType sets the value of Type.
func (s *CreateCRQReq) SetType(val OptCreateCRQReqType) {
	s.Type = val
}

// SetIsAutoClose sets the value of IsAutoClose.
func (s *CreateCRQReq) SetIsAutoClose(val OptBool) {
	s.IsAutoClose = val
}

// The type of change.
type CreateCRQReqType string

const (
	CreateCRQReqTypeCrq     CreateCRQReqType = "crq"
	CreateCRQReqTypeAutocrq CreateCRQReqType = "autocrq"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreateCRQReqType) MarshalText() ([]byte, error) {
	switch s {
	case CreateCRQReqTypeCrq:
		return []byte(s), nil
	case CreateCRQReqTypeAutocrq:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateCRQReqType) UnmarshalText(data []byte) error {
	switch CreateCRQReqType(data) {
	case CreateCRQReqTypeCrq:
		*s = CreateCRQReqTypeCrq
		return nil
	case CreateCRQReqTypeAutocrq:
		*s = CreateCRQReqTypeAutocrq
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateIncidentApplicationJSONBadRequest Error

func (*CreateIncidentApplicationJSONBadRequest) createIncidentRes() {}

type CreateIncidentApplicationJSONInternalServerError Error

func (*CreateIncidentApplicationJSONInternalServerError) createIncidentRes() {}

type CreateIncidentReq struct {
	// The short-form description of change.
	Summary string `json:"summary"`
	// The long-form description of change.
	Description string `json:"description"`
}

// GetSummary returns the value of Summary.
func (s *CreateIncidentReq) GetSummary() string {
	return s.Summary
}

// GetDescription returns the value of Description.
func (s *CreateIncidentReq) GetDescription() string {
	return s.Description
}

// SetSummary sets the value of Summary.
func (s *CreateIncidentReq) SetSummary(val string) {
	s.Summary = val
}

// SetDescription sets the value of Description.
func (s *CreateIncidentReq) SetDescription(val string) {
	s.Description = val
}

// Ref: #/components/responses/created
type Created struct {
	Location OptLink
}

// GetLocation returns the value of Location.
func (s *Created) GetLocation() OptLink {
	return s.Location
}

// SetLocation sets the value of Location.
func (s *Created) SetLocation(val OptLink) {
	s.Location = val
}

func (*Created) createCRQRes()      {}
func (*Created) createIncidentRes() {}

// Ref: #/components/schemas/crq
type Crq struct {
	Links SelfLink `json:"_links"`
	ID    ID       `json:"id"`
	// The short-form description of change.
	Summary string `json:"summary"`
	// The long-form description of change.
	Description string `json:"description"`
	// The type of change.
	Type CrqType `json:"type"`
	// This flag indicates that change request should be closed automatically.
	IsAutoClose bool         `json:"isAutoClose"`
	CreatedAt   Timestamp    `json:"createdAt"`
	UpdatedAt   OptTimestamp `json:"updatedAt"`
}

// GetLinks returns the value of Links.
func (s *Crq) GetLinks() SelfLink {
	return s.Links
}

// GetID returns the value of ID.
func (s *Crq) GetID() ID {
	return s.ID
}

// GetSummary returns the value of Summary.
func (s *Crq) GetSummary() string {
	return s.Summary
}

// GetDescription returns the value of Description.
func (s *Crq) GetDescription() string {
	return s.Description
}

// GetType returns the value of Type.
func (s *Crq) GetType() CrqType {
	return s.Type
}

// GetIsAutoClose returns the value of IsAutoClose.
func (s *Crq) GetIsAutoClose() bool {
	return s.IsAutoClose
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Crq) GetCreatedAt() Timestamp {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Crq) GetUpdatedAt() OptTimestamp {
	return s.UpdatedAt
}

// SetLinks sets the value of Links.
func (s *Crq) SetLinks(val SelfLink) {
	s.Links = val
}

// SetID sets the value of ID.
func (s *Crq) SetID(val ID) {
	s.ID = val
}

// SetSummary sets the value of Summary.
func (s *Crq) SetSummary(val string) {
	s.Summary = val
}

// SetDescription sets the value of Description.
func (s *Crq) SetDescription(val string) {
	s.Description = val
}

// SetType sets the value of Type.
func (s *Crq) SetType(val CrqType) {
	s.Type = val
}

// SetIsAutoClose sets the value of IsAutoClose.
func (s *Crq) SetIsAutoClose(val bool) {
	s.IsAutoClose = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Crq) SetCreatedAt(val Timestamp) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Crq) SetUpdatedAt(val OptTimestamp) {
	s.UpdatedAt = val
}

func (*Crq) getCRQByIdRes() {}

// The type of change.
type CrqType string

const (
	CrqTypeCrq     CrqType = "crq"
	CrqTypeAutocrq CrqType = "autocrq"
)

// MarshalText implements encoding.TextMarshaler.
func (s CrqType) MarshalText() ([]byte, error) {
	switch s {
	case CrqTypeCrq:
		return []byte(s), nil
	case CrqTypeAutocrq:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CrqType) UnmarshalText(data []byte) error {
	switch CrqType(data) {
	case CrqTypeCrq:
		*s = CrqTypeCrq
		return nil
	case CrqTypeAutocrq:
		*s = CrqTypeAutocrq
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/error
type Error struct {
	// An API error type.
	Code ErrorCode `json:"code"`
	// Human readable message.
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() ErrorCode {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val ErrorCode) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// An API error type.
type ErrorCode string

const (
	ErrorCodeInvalid  ErrorCode = "invalid"
	ErrorCodeNotFound ErrorCode = "not_found"
	ErrorCodeInternal ErrorCode = "internal"
)

// MarshalText implements encoding.TextMarshaler.
func (s ErrorCode) MarshalText() ([]byte, error) {
	switch s {
	case ErrorCodeInvalid:
		return []byte(s), nil
	case ErrorCodeNotFound:
		return []byte(s), nil
	case ErrorCodeInternal:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ErrorCode) UnmarshalText(data []byte) error {
	switch ErrorCode(data) {
	case ErrorCodeInvalid:
		*s = ErrorCodeInvalid
		return nil
	case ErrorCodeNotFound:
		*s = ErrorCodeNotFound
		return nil
	case ErrorCodeInternal:
		*s = ErrorCodeInternal
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GetCRQByIdApplicationJSONInternalServerError Error

func (*GetCRQByIdApplicationJSONInternalServerError) getCRQByIdRes() {}

type GetCRQByIdApplicationJSONNotFound Error

func (*GetCRQByIdApplicationJSONNotFound) getCRQByIdRes() {}

type GetIncidentByIdApplicationJSONBadRequest Error

func (*GetIncidentByIdApplicationJSONBadRequest) getIncidentByIdRes() {}

type GetIncidentByIdApplicationJSONInternalServerError Error

func (*GetIncidentByIdApplicationJSONInternalServerError) getIncidentByIdRes() {}

type ID string

// Ref: #/components/schemas/incident
type Incident struct {
	Links SelfLink `json:"_links"`
	ID    ID       `json:"id"`
	// The short-form description of change.
	Summary string `json:"summary"`
	// The long-form description of change.
	Description string       `json:"description"`
	CreatedAt   Timestamp    `json:"createdAt"`
	UpdatedAt   OptTimestamp `json:"updatedAt"`
}

// GetLinks returns the value of Links.
func (s *Incident) GetLinks() SelfLink {
	return s.Links
}

// GetID returns the value of ID.
func (s *Incident) GetID() ID {
	return s.ID
}

// GetSummary returns the value of Summary.
func (s *Incident) GetSummary() string {
	return s.Summary
}

// GetDescription returns the value of Description.
func (s *Incident) GetDescription() string {
	return s.Description
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Incident) GetCreatedAt() Timestamp {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Incident) GetUpdatedAt() OptTimestamp {
	return s.UpdatedAt
}

// SetLinks sets the value of Links.
func (s *Incident) SetLinks(val SelfLink) {
	s.Links = val
}

// SetID sets the value of ID.
func (s *Incident) SetID(val ID) {
	s.ID = val
}

// SetSummary sets the value of Summary.
func (s *Incident) SetSummary(val string) {
	s.Summary = val
}

// SetDescription sets the value of Description.
func (s *Incident) SetDescription(val string) {
	s.Description = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Incident) SetCreatedAt(val Timestamp) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Incident) SetUpdatedAt(val OptTimestamp) {
	s.UpdatedAt = val
}

func (*Incident) getIncidentByIdRes() {}

type LimitType int

type Link url.URL

// Ref: #/components/schemas/links
type Links struct {
	Self Link    `json:"self"`
	Base Link    `json:"base"`
	Next OptLink `json:"next"`
	Prev OptLink `json:"prev"`
}

// GetSelf returns the value of Self.
func (s *Links) GetSelf() Link {
	return s.Self
}

// GetBase returns the value of Base.
func (s *Links) GetBase() Link {
	return s.Base
}

// GetNext returns the value of Next.
func (s *Links) GetNext() OptLink {
	return s.Next
}

// GetPrev returns the value of Prev.
func (s *Links) GetPrev() OptLink {
	return s.Prev
}

// SetSelf sets the value of Self.
func (s *Links) SetSelf(val Link) {
	s.Self = val
}

// SetBase sets the value of Base.
func (s *Links) SetBase(val Link) {
	s.Base = val
}

// SetNext sets the value of Next.
func (s *Links) SetNext(val OptLink) {
	s.Next = val
}

// SetPrev sets the value of Prev.
func (s *Links) SetPrev(val OptLink) {
	s.Prev = val
}

type ListCRQApplicationJSONBadRequest Error

func (*ListCRQApplicationJSONBadRequest) listCRQRes() {}

type ListCRQApplicationJSONInternalServerError Error

func (*ListCRQApplicationJSONInternalServerError) listCRQRes() {}

// Merged schema.
type ListCrq struct {
	Links Links     `json:"_links"`
	Limit LimitType `json:"limit"`
	Start StartType `json:"start"`
	Total int       `json:"total"`
	Data  []Crq     `json:"data"`
}

// GetLinks returns the value of Links.
func (s *ListCrq) GetLinks() Links {
	return s.Links
}

// GetLimit returns the value of Limit.
func (s *ListCrq) GetLimit() LimitType {
	return s.Limit
}

// GetStart returns the value of Start.
func (s *ListCrq) GetStart() StartType {
	return s.Start
}

// GetTotal returns the value of Total.
func (s *ListCrq) GetTotal() int {
	return s.Total
}

// GetData returns the value of Data.
func (s *ListCrq) GetData() []Crq {
	return s.Data
}

// SetLinks sets the value of Links.
func (s *ListCrq) SetLinks(val Links) {
	s.Links = val
}

// SetLimit sets the value of Limit.
func (s *ListCrq) SetLimit(val LimitType) {
	s.Limit = val
}

// SetStart sets the value of Start.
func (s *ListCrq) SetStart(val StartType) {
	s.Start = val
}

// SetTotal sets the value of Total.
func (s *ListCrq) SetTotal(val int) {
	s.Total = val
}

// SetData sets the value of Data.
func (s *ListCrq) SetData(val []Crq) {
	s.Data = val
}

func (*ListCrq) listCRQRes() {}

// Merged schema.
type ListIncidents struct {
	Links Links      `json:"_links"`
	Limit LimitType  `json:"limit"`
	Start StartType  `json:"start"`
	Total int        `json:"total"`
	Data  []Incident `json:"data"`
}

// GetLinks returns the value of Links.
func (s *ListIncidents) GetLinks() Links {
	return s.Links
}

// GetLimit returns the value of Limit.
func (s *ListIncidents) GetLimit() LimitType {
	return s.Limit
}

// GetStart returns the value of Start.
func (s *ListIncidents) GetStart() StartType {
	return s.Start
}

// GetTotal returns the value of Total.
func (s *ListIncidents) GetTotal() int {
	return s.Total
}

// GetData returns the value of Data.
func (s *ListIncidents) GetData() []Incident {
	return s.Data
}

// SetLinks sets the value of Links.
func (s *ListIncidents) SetLinks(val Links) {
	s.Links = val
}

// SetLimit sets the value of Limit.
func (s *ListIncidents) SetLimit(val LimitType) {
	s.Limit = val
}

// SetStart sets the value of Start.
func (s *ListIncidents) SetStart(val StartType) {
	s.Start = val
}

// SetTotal sets the value of Total.
func (s *ListIncidents) SetTotal(val int) {
	s.Total = val
}

// SetData sets the value of Data.
func (s *ListIncidents) SetData(val []Incident) {
	s.Data = val
}

func (*ListIncidents) listIncidentsRes() {}

type ListIncidentsApplicationJSONBadRequest Error

func (*ListIncidentsApplicationJSONBadRequest) listIncidentsRes() {}

type ListIncidentsApplicationJSONInternalServerError Error

func (*ListIncidentsApplicationJSONInternalServerError) listIncidentsRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateCRQReqType returns new OptCreateCRQReqType with value set to v.
func NewOptCreateCRQReqType(v CreateCRQReqType) OptCreateCRQReqType {
	return OptCreateCRQReqType{
		Value: v,
		Set:   true,
	}
}

// OptCreateCRQReqType is optional CreateCRQReqType.
type OptCreateCRQReqType struct {
	Value CreateCRQReqType
	Set   bool
}

// IsSet returns true if OptCreateCRQReqType was set.
func (o OptCreateCRQReqType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateCRQReqType) Reset() {
	var v CreateCRQReqType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateCRQReqType) SetTo(v CreateCRQReqType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateCRQReqType) Get() (v CreateCRQReqType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateCRQReqType) Or(d CreateCRQReqType) CreateCRQReqType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLimitType returns new OptLimitType with value set to v.
func NewOptLimitType(v LimitType) OptLimitType {
	return OptLimitType{
		Value: v,
		Set:   true,
	}
}

// OptLimitType is optional LimitType.
type OptLimitType struct {
	Value LimitType
	Set   bool
}

// IsSet returns true if OptLimitType was set.
func (o OptLimitType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLimitType) Reset() {
	var v LimitType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLimitType) SetTo(v LimitType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLimitType) Get() (v LimitType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLimitType) Or(d LimitType) LimitType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLink returns new OptLink with value set to v.
func NewOptLink(v Link) OptLink {
	return OptLink{
		Value: v,
		Set:   true,
	}
}

// OptLink is optional Link.
type OptLink struct {
	Value Link
	Set   bool
}

// IsSet returns true if OptLink was set.
func (o OptLink) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLink) Reset() {
	var v Link
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLink) SetTo(v Link) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLink) Get() (v Link, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLink) Or(d Link) Link {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStartType returns new OptStartType with value set to v.
func NewOptStartType(v StartType) OptStartType {
	return OptStartType{
		Value: v,
		Set:   true,
	}
}

// OptStartType is optional StartType.
type OptStartType struct {
	Value StartType
	Set   bool
}

// IsSet returns true if OptStartType was set.
func (o OptStartType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStartType) Reset() {
	var v StartType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStartType) SetTo(v StartType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStartType) Get() (v StartType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStartType) Or(d StartType) StartType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTimestamp returns new OptTimestamp with value set to v.
func NewOptTimestamp(v Timestamp) OptTimestamp {
	return OptTimestamp{
		Value: v,
		Set:   true,
	}
}

// OptTimestamp is optional Timestamp.
type OptTimestamp struct {
	Value Timestamp
	Set   bool
}

// IsSet returns true if OptTimestamp was set.
func (o OptTimestamp) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTimestamp) Reset() {
	var v Timestamp
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTimestamp) SetTo(v Timestamp) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTimestamp) Get() (v Timestamp, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTimestamp) Or(d Timestamp) Timestamp {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Set of links.
// Ref: #/components/schemas/self_link
type SelfLink struct {
	Self Link `json:"self"`
}

// GetSelf returns the value of Self.
func (s *SelfLink) GetSelf() Link {
	return s.Self
}

// SetSelf sets the value of Self.
func (s *SelfLink) SetSelf(val Link) {
	s.Self = val
}

type StartType int

type Timestamp int64
